name: build
on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0

      - name: Setup Python
        uses: actions/setup-python@v4.5.0

        with:
          python-version: "3.11.5"

      - name: Setup Poetry
        uses: Gr1N/setup-poetry@v8
        with:
          poetry-version: '1.6.1'

      - name: Install requirements
        run: poetry install

      - name: Run black
        run: poetry run black . --check

      - name: Run Flake8
        run: poetry run flake8 .

      - name: create env file
        run: |
              echo "PIP_VERSION=${{ secrets.WEBAPP_PIP_VERSION || '23.2.21' }}" >> .env
              echo "POETRY_VERSION={{ secrets.WEBAPP_POETRY_VERSION || '1.6.1' }}" >> .env
              echo "PYTHON_VERSION=${{ secrets.WEBAPP_PYTHON_VERSION || '3.11.5' }}" >> .env
              echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
              echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
              echo "SUPERUSER_USERNAME=${{ secrets.SUPERUSER_USERNAME }}" >> .env
              echo "SUPERUSER_PASSWORD=${{ secrets.SUPERUSER_PASSWORD }}" >> .env
              echo "ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}" >> .env
              echo "DEBUG=${{ secrets.DEBUG }}" >> .env
              echo "MYSQL_USER=${{ secrets.POSTGRES_USER }}" >> .env
              echo "MYSQL_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
              echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env

      - name: build
        run: docker-compose up -d

      - name: stop services
        run: docker-compose stop
